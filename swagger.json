{
    "openapi": "3.0.0",
    "info": {
      "title": "McDonalds Authentication API",
      "description": "API for authenticating users on McDonald's. This API provides endpoints for user registration, login, and user profile management.",
      "version": "1.0.0"
    },
    "paths": {
      "/users": {
        "post": {
          "summary": "Create a new user",
          "description": "This endpoint is used to register a new user by providing their username, email, and password.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "example": "johndoe"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "johndoe@example.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "securepassword123"
                    }
                  },
                  "required": ["username", "email", "password"]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User successfully created",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "newUser": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "username": {
                            "type": "string",
                            "example": "johndoe"
                          },
                          "email": {
                            "type": "string",
                            "example": "johndoe@example.com"
                          }
                        }
                      },
                      "message": {
                        "type": "string",
                        "example": "User created successfully"
                      }
                    }
                  }
                }
              }
            },
            "409": {
              "description": "User already exists",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "User already exists"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Internal Server Error"
                      },
                      "error": {
                        "type": "string",
                        "example": "Error message"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "get": {
          "summary": "Get user profile",
          "description": "This endpoint retrieves the authenticated user's profile information.",
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "User profile retrieved successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "username": {
                        "type": "string",
                        "example": "johndoe"
                      },
                      "email": {
                        "type": "string",
                        "example": "johndoe@example.com"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized - No token or invalid token",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Unauthorized"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Internal Server Error"
                      },
                      "error": {
                        "type": "string",
                        "example": "Error message"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/login": {
        "post": {
          "summary": "Login user",
          "description": "This endpoint allows the user to login by providing their email and password, and it returns a JWT token.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "johndoe@example.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "securepassword123"
                    }
                  },
                  "required": ["email", "password"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Login successful - returns JWT token",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "token": {
                        "type": "string",
                        "example": "jwt.token.here"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Invalid credentials",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Invalid credentials"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Internal Server Error"
                      },
                      "error": {
                        "type": "string",
                        "example": "Error message"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "securitySchemes": {
        "BearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }
  